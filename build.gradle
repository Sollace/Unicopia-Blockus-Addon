buildscript {
    dependencies {
        classpath 'com.github.dexman545:Outlet:1.6.1'
    }
}
plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'com.modrinth.minotaur' version '2.+'
    id 'org.ajoberstar.reckon' version '0.13.1'
}
apply plugin: 'io.github.dexman545.outlet'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withSourcesJar()
}

outlet.allowSnapshotsForProject = false
outlet.mcVersionRange = project.minecraft_version_range

group = project.group
description = project.displayname
archivesBaseName = project.name

loom {
    mixin.defaultRefmapName = 'unicopia-blockus.mixin.refmap.json'
    runs {
        datagen {
            server()
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.modid=unicopia-blockus"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            runDir "build/datagen"
        }
    }
}
assemble.dependsOn(runDatagen)

reckon {
    scopeFromProp()
    stageFromProp 'beta', 'rc', 'final'
}

repositories {
    mavenLocal()
    flatDir { dirs 'lib' }
    maven { name 'mod-menu'; url 'https://maven.terraformersmc.com/' }
    maven { name 'minelp-snapshot'; url 'https://repo.minelittlepony-mod.com/maven/snapshot' }
    maven { name 'minelp-releases'; url 'https://repo.minelittlepony-mod.com/maven/release' }
    maven { name 'TerraformersMC'; url 'https://maven.terraformersmc.com/' }
    maven { name 'Modrinth'; url 'https://api.modrinth.com/maven' }
    maven { name 'JitPack'; url 'https://jitpack.io'; content { includeGroup "com.github.Virtuoel" } }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modApi "net.fabricmc:fabric-loader:${project.loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
    modApi "com.terraformersmc.terraform-api:terraform-wood-api-v1:${project.terraformer_api_version}"
    modApi "com.minelittlepony:kirin:${project.kirin_version}"
    modApi "com.minelittlepony:unicopia:${project.unicopia_version}"
    modApi "maven.modrinth:blockus:${project.blockus_version}"

    if (project.tmi_type == 'emi') {
      modCompileOnly "dev.emi:emi-fabric:${project.emi_version}"
    } else {
      modCompileOnly "dev.emi:emi-fabric-dummy:${project.emi_version}"
    }
}

sourceSets {
  main {
    resources {
      srcDirs += [ "src/main/generated" ]
    }
  }
}

processResources {
    inputs.property "version", project.version.toString()

    filesMatching("fabric.mod.json") {
        expand "version": project.version.toString(),
                "minecraftVersion": project.minecraft_version_range,
                "loaderVersion": ">=${project.loader_version}",
                "fabricVersion": ">=${project.fabric_version}",
                "unicopiaVersion": ">=${project.unicopia_version}",
                "blockusVersion": ">=${project.blockus_version}"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.modrinth {
    onlyIf {
      def stage = version.version.stage.value
      stage == null || stage.name != 'beta'
    }
}

modrinth {
    token = System.env.MODRINTH_KEY
    projectId = project.modrinth_project_id
    //featured = true
    versionNumber = version.toString()
    versionName = archivesBaseName + '-' + version
    changelog = "[Changelog](https://github.com/Sollace/Unicopia-Blockus-Addon/releases/tag/${version.toString()})"
    uploadFile = remapJar
    outlet.mcVersions().each{ver ->
      gameVersions.add ver
    }
    dependencies {
       required.project '9K7RJlvM'
       required.project 'zFiY2Go0'
    }
}
